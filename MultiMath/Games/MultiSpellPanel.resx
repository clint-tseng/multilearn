<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_winnerTrophyPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>